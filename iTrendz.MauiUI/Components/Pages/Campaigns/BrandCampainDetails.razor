@page "/campaigns/brand/{Id:int}"

<TwoPaneLayout>
    <LeftContent>
        <CampaignHeader ImageUrl="@_campaign?.ImageURL" Title="@_campaign?.Title" Brand="_campaign?.Brand"/>
        <CampaignInfo CampaignDetails="_campaignDetails"/>
    </LeftContent>
    <RightContent>
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="Overview">
                <MudStack>
                    <CampaignDescription Description="@_campaign?.Description"/>
                    <CampaignInfluencerRequirements Requirements="_influencerRequirements"/>
                    <CampaignPlatforms Platforms="_platforms"/>
                    <CampaignPlatformDeliverables Deliverables="_deliverables"/>
                </MudStack>
            </MudTabPanel>
            <MudTabPanel Text="Influencers">
                <InfluencersDataGrid Influencers="_influencers"/>
            </MudTabPanel>
            <MudTabPanel Text="Insights">
                <CampaignInsights TimelineEvents="_campaign?.TimelineEvents"/>
            </MudTabPanel>
            <MudTabPanel Text="Posts">
                <CampaignVideos Videos="_videos"/>
            </MudTabPanel>
        </MudTabs>
    </RightContent>
</TwoPaneLayout>

@code {
    [Parameter] public int Id { get; set; }

    private IEnumerable<Influencer>? _influencers;

    protected override void OnInitialized()
    {
        _influencers = new List<Influencer>
        {
            new()
            {
                UserName = "Sam",
                ImageUrl = "https://picsum.photos/200",
                Status = "Active",
                Price = 250,
                Followers = 87_000
            }
        };
    }

    private List<Video>? _videos;

    private InfluencerRequirements? _influencerRequirements;
    private List<Platform>? _platforms;
    private List<PlatformDeliverable>? _deliverables;
    private CampaignDetails? _campaignDetails;
    private Campaign? _campaign;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(10000);

        _campaign = new Campaign
        {
            Title = "Tech gadget review",
            Description = "Join our exciting campaign to promote the latest in cutting-edge technology! We’re looking for tech-savvy influencers to review and create content around our brand-new smart gadgets, including wireless headphones, smart home assistants, and portable charging devices. Selected influencers will receive the product free of charge to showcase its features, usability, and design. Whether it's a deep-dive review video or a creative unboxing, we want your authentic voice to reach tech enthusiasts everywhere!",
            ImageURL = "https://picsum.photos/300/",
            Brand = new Brand
            {
                UserName = "NextGen",
                ImageUrl = "https://picsum.photos/50/"
            },
            TimelineEvents =
            [
                new TimelineEvent("Campaign Created", "The campaign was successfully set up and is now ready for further configuration.", timestamp: new DateTime(2024, 3, 5), type: EventType.Info),
                new TimelineEvent("Initial Creators Invited", "An invitation was sent to a select group of creators based on the brand's preferences.", timestamp: new DateTime(2024, 3, 7), type: EventType.Info),
                new TimelineEvent("5 Creators Accepted the Invitation", "Five creators agreed to participate in the campaign and began their onboarding process.", timestamp: new DateTime(2024, 3, 10), type: EventType.Positive),
                new TimelineEvent("Budget Adjustment Required", "The campaign budget exceeded the initial projection due to higher engagement expectations. A revision was needed.", timestamp: new DateTime(2024, 3, 14), type: EventType.Negative),
                new TimelineEvent("Content Submission Deadline Reminder", "A reminder was sent to all participating creators about the upcoming content submission deadline on March 18.", timestamp: new DateTime(2024, 3, 15), type: EventType.Info),
                new TimelineEvent("Final Content Submitted for Review", "All creators submitted their final content for review before approval.", timestamp: new DateTime(2024, 3, 18), type: EventType.Warning),
                new TimelineEvent("Content Approval Meeting Held", "The brand reviewed the content with internal stakeholders and provided feedback for revisions.", timestamp: new DateTime(2024, 3, 22), type: EventType.Warning),
                new TimelineEvent("Campaign Launch", "The campaign officially launched across multiple social media platforms, with all approved content posted by creators.", timestamp: new DateTime(2024, 3, 31), type: EventType.Positive),
                new TimelineEvent("Campaign Performance Report Generated", "An initial performance report was generated, indicating positive trends in engagement and reach.", timestamp: new DateTime(2024, 4, 5), type: EventType.Info),
                new TimelineEvent("Campaign Successfully Completed", "The campaign ended, meeting most of its goals in terms of reach and engagement. Final reports were sent to the brand.", timestamp: new DateTime(2024, 4, 11), type: EventType.Positive)
            ]
        };

        _videos =
        [
            new Video
            {
                Id = 1,
                Title = "Car in Forest",
                VideoUrl = "/assets/videos/video.mp4",
                PosterUrl = "/assets/image/poster.jpg"
            },
            new Video()
            {
                Id = 2,
                Title = "Car in Forest",
                VideoUrl = "/assets/videos/video.mp4",
                PosterUrl = "/assets/image/poster.jpg"
            },
            new Video()
            {
                Id = 3,
                Title = "Car in Forest",
                VideoUrl = "/assets/videos/video.mp4",
                PosterUrl = "/assets/image/poster.jpg"
            },
            new Video()
            {
                Id = 4,
                Title = "Car in Forest",
                VideoUrl = "/assets/videos/video.mp4",
                PosterUrl = "/assets/image/poster.jpg"
            }
        ];

        _influencerRequirements = new InfluencerRequirements
        {
            MinimumFollowers = 25_000_000,
            AverageViews = 250_000,
            Audience = "Female"
        };

        _campaignDetails = new CampaignDetails
        {
            StartDate = new DateTime(2024, 10, 1),
            EndDate = new DateTime(2024, 10, 15),
            CampaignType = "Unboxing",
            TotalCreators = 25,
            CurrentCreators = 4
        };

        _platforms =
        [
            new Platform { Icon = Icons.Custom.Brands.Instagram, Name = "Instagram" },
            new Platform { Icon = Icons.Custom.Brands.TikTok, Name = "TikTok" },
            new Platform { Icon = Icons.Custom.Brands.YouTube, Name = "YouTube" }
        ];
        _deliverables =
        [
            new PlatformDeliverable
            {
                Platform = new Platform { Icon = Icons.Custom.Brands.Instagram, Name = "Instagram" },
                ContentRequirements =
                [
                    new ContentRequirement
                    {
                        ContentType = "Story",
                        Description = "Up to 15 seconds per story, vertical format (1080 x 1920 pixels), must highlight key features of the gadget, include engaging visuals and polls or questions for interaction."
                    },

                    new ContentRequirement
                    {
                        ContentType = "Posts",
                        Description = "Square (1080 x 1080 pixels) or landscape (1080 x 566 pixels), captions limited to 2,200 characters, must include relevant hashtags and a clear call-to-action (e.g., 'Check out the full review on my blog!')."
                    },

                    new ContentRequirement
                    {
                        ContentType = "Reels",
                        Description = "Up to 60 seconds, vertical format, showcase the gadget in use, include trending audio, and provide quick tips or highlights."
                    }
                ]
            },
            new PlatformDeliverable
            {
                Platform = new Platform { Icon = Icons.Custom.Brands.TikTok, Name = "TikTok" },
                ContentRequirements =
                [
                    new ContentRequirement
                    {
                        ContentType = "Short Videos",
                        Description = "15 to 60 seconds in length, vertical format (1080 x 1920 pixels), must include music or sound clips, focus on engaging demonstrations or unboxing experiences, and follow current TikTok trends."
                    }
                ]
            },
            new PlatformDeliverable
            {
                Platform = new Platform { Icon = Icons.Custom.Brands.YouTube, Name = "YouTube" },
                ContentRequirements =
                [
                    new ContentRequirement
                    {
                        ContentType = "Long-form Videos",
                        Description = "Minimum resolution of 720p, video length of 8+ minutes, must provide in-depth reviews, comparisons, and demonstrations, and include a compelling title and description for SEO optimization."
                    },
                    new ContentRequirement
                    {
                        ContentType = "Shorts",
                        Description = "Up to 60 seconds, vertical format, should highlight the gadget's standout features quickly, engaging hook in the first few seconds, and can include popular music."
                    },
                    new ContentRequirement
                    {
                        ContentType = "Mid-Roll Ads",
                        Description = "Should be placed strategically within videos longer than 8 minutes, clearly indicated and relevant to the gadget being reviewed, ensure smooth transitions into and out of the ad segment."
                    }
                ]
            }
        ];
    }


}