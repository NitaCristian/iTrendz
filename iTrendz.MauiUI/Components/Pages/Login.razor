@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager Navigation;
@inject HttpClient Http

<div class="login-container">
    <div class="login-header">
        <MudText Typo="Typo.h5">Login to iTrendz</MudText>
    </div>

    <EditForm Model="@_loginModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>

        <MudTextField Label="Username" HelperText="Max. 8 characters" @bind-Value="_loginModel.Username" For="@(() => _loginModel.Username)"/>

        <MudTextField Label="Password" HelperText="Choose a strong password" @bind-Value="_loginModel.Password" For="@(() => _loginModel.Password)"/>

        <div class="d-flex justify-center my-6">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Login Now</MudButton>
        </div>
    </EditForm>
    
    <div class="d-flex flex-row justify-center">
        <MudStack Row="true" Spacing="3">
            <MudIconButton Icon="@Icons.Custom.Brands.Facebook" Color="Color.Primary" aria-label="facebook"/>
            <MudIconButton Icon="@Icons.Custom.Brands.Instagram" Color="Color.Primary" aria-label="instagram"/>
            <MudIconButton Icon="@Icons.Custom.Brands.TikTok" Color="Color.Primary" aria-label="tiktok"/>
        </MudStack>
    </div>

    <div class="login-footer mt-3">
        <p>Don't have an account? <a href="/register" class="register-link">Register here</a></p>
    </div>
</div>

@code {
    private readonly LoginViewModel _loginModel = new();

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("https://localhost:7061/api/authentication/login", _loginModel);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Login(result.JwtToken, result.Expiration, result.RefreshToken);
            Navigation.NavigateTo("/");
        }
    }

}