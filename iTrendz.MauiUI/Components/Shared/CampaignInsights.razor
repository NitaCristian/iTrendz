<MudStack>
    <CampaignTimeline Events="TimelineEvents"/>

    @if (ForInfluencer == false)
    {
        <CampaignBudgetStatistics Statistics="_campaign.BudgetStatistics"/>
    }

    <MudGrid Spacing="8">
        <MudItem xs="4">
            <StatCard Title="Organic Reach" Value="@_campaign.CampaignMetrics.Reach" MaxValue="@_campaign.CampaignMetrics.Views"/>
        </MudItem>
        <MudItem xs="4">
            <StatCard Title="Organic Engagement" Value="@_campaign.CampaignMetrics.Engagement" MaxValue="@_campaign.CampaignMetrics.Views"/>
        </MudItem>
        <MudItem xs="4">
            <IconCard Label="Total Posts" Value="@_campaign.CampaignDetails.TotalPosts.ToString()" Icon="@Icons.Material.Filled.Image" IconColor="Color.Primary"/>
            <IconCard Label="Total Creators" Value="@_campaign.CampaignDetails.TotalCreators.ToString()" Icon="@Icons.Material.Filled.People" IconColor="Color.Primary"/>
        </MudItem>
        <MudItem xs="3">
            <MediaCard Label="Views" Value="@FormatNumber(_campaign.CampaignMetrics.Views)" Icon="@Icons.Material.Filled.RemoveRedEye" IconColor="Color.Tertiary"/>
        </MudItem>
        <MudItem xs="3">
            <MediaCard Label="Likes" Value="@FormatNumber(_campaign.CampaignMetrics.Likes)" Icon="@Icons.Material.Rounded.HeartBroken" IconColor="Color.Secondary"/>
        </MudItem>
        <MudItem xs="3">
            <MediaCard Label="Comments" Value="@FormatNumber(_campaign.CampaignMetrics.Comments)" Icon="@Icons.Material.Rounded.Comment" IconColor="Color.Secondary"/>
        </MudItem>
        <MudItem xs="3">
            <MediaCard Label="Shares" Value="@FormatNumber(_campaign.CampaignMetrics.Shares)" Icon="@Icons.Material.Filled.Share" IconColor="Color.Secondary"/>
        </MudItem>
        <MudItem xs="6">
            <PieChartCard Title="Age Group" ChartData="@_campaign.CampaignDetails.AgeGroupData" ChartLabels="@AgeGroupLabels"/>
        </MudItem>
        <MudItem xs="6">
            <PieChartCard Title="Demographic Data" ChartData="@_campaign.CampaignDetails.DemographicData" ChartLabels="@_campaign.CampaignDetails.DemographicLabels"/>
        </MudItem>
    </MudGrid>
</MudStack>

@code {
    [Parameter] public bool ForInfluencer { get; set; }
    [Parameter] public List<TimelineEvent>? TimelineEvents { get; set; }

    private string[] AgeGroupLabels => _campaign.CampaignDetails.AgeGroupCategories.Select((label, index) => $"{label} ({_campaign.CampaignDetails.AgeGroupData[index] / _campaign.CampaignDetails.AgeGroupData.Sum() * 100:0.0}%)").ToArray();

    private Campaign _campaign = new()
    {
        CampaignDetails = new()
        {
            TotalPosts = 30,
            TotalCreators = 10,
            DemographicData = [15, 30, 45, 10],
            DemographicLabels = ["America", "Romania", "United Kingdom", "Canada"],
            AgeGroupData = [15, 30, 45, 10],
            AgeGroupCategories = ["18-24", "25-34", "35-44", "45-54"],
        },
        CampaignMetrics = new()
        {
            Views = 13100,
            Likes = 9100,
            Comments = 6200,
            Shares = 20700,
            Reach = 12_600,
            Engagement = 3000,
        },
        BudgetStatistics = new()
        {
            InitialBudget = 10000,
            RemainingBudget = 4500,
            BudgetHistoryData = [10000, 8500, 6000, 4500],
            BudgetHistoryLabels = ["January", "February", "March", "April"],
            BudgetAllocationData = [50, 30, 20],
            BudgetAllocationLabels = ["Marketing", "Development", "Operations"]
        }
    };

    private static string FormatNumber(int number)
    {
        return number switch
        {
            >= 1000 and < 1000000 => (number / 1000D).ToString("0.#") + "k",
            >= 1000000 => (number / 1000000D).ToString("0.#") + "M",
            _ => number.ToString()
        };
    }

}