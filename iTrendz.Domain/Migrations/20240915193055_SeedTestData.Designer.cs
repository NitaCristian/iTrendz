// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iTrendz.Domain.Context;

#nullable disable

namespace iTrendz.Domain.Migrations
{
    [DbContext(typeof(TrendzDbContext))]
    [Migration("20240915193055_SeedTestData")]
    partial class SeedTestData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AllocatedBudget")
                        .HasColumnType("REAL");

                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateTime")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartTime")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllocatedBudget = 2681.7199999999998,
                            BrandId = 3,
                            DateTime = new DateOnly(2025, 1, 10),
                            Description = "Est quam aliquam ullam amet occaecati rerum ut inventore. Aut et earum veniam numquam dolorem harum. Ut optio quidem repudiandae repudiandae.",
                            ImageURL = "https://picsum.photos/640/480/?image=958",
                            StartTime = new DateOnly(2023, 9, 26),
                            Title = "Unbranded Granite Cheese"
                        },
                        new
                        {
                            Id = 2,
                            AllocatedBudget = 2598.0500000000002,
                            BrandId = 1,
                            DateTime = new DateOnly(2025, 2, 21),
                            Description = "Asperiores sapiente perferendis quisquam incidunt beatae dolor ipsum. Vel esse distinctio non ut impedit. Modi corrupti est omnis tempora laborum. Consequatur dolores vitae veniam. Quia sit sequi et aliquid laboriosam hic itaque ipsa non.",
                            ImageURL = "https://picsum.photos/640/480/?image=295",
                            StartTime = new DateOnly(2023, 10, 6),
                            Title = "Tasty Cotton Shirt"
                        },
                        new
                        {
                            Id = 3,
                            AllocatedBudget = 1520.52,
                            BrandId = 8,
                            DateTime = new DateOnly(2025, 2, 4),
                            Description = "Quaerat velit tempora cupiditate quis beatae. Quisquam esse qui optio libero explicabo voluptas est totam. Ut nihil eos esse praesentium. Culpa aspernatur ipsum at unde sed ut earum velit. Quia delectus odit blanditiis ut facilis.",
                            ImageURL = "https://picsum.photos/640/480/?image=829",
                            StartTime = new DateOnly(2023, 11, 19),
                            Title = "Handmade Granite Salad"
                        },
                        new
                        {
                            Id = 4,
                            AllocatedBudget = 2932.6599999999999,
                            BrandId = 7,
                            DateTime = new DateOnly(2025, 5, 8),
                            Description = "Unde officia odit aut. Aut vero perspiciatis tenetur et quam pariatur delectus voluptates ea. Tempore est totam et culpa explicabo et labore. Magni eum sed placeat aut sed a. Et voluptatem rerum consectetur eius fugit doloribus amet dolor qui.",
                            ImageURL = "https://picsum.photos/640/480/?image=945",
                            StartTime = new DateOnly(2023, 11, 1),
                            Title = "Handcrafted Fresh Chips"
                        },
                        new
                        {
                            Id = 5,
                            AllocatedBudget = 2785.6599999999999,
                            BrandId = 9,
                            DateTime = new DateOnly(2024, 10, 22),
                            Description = "Eos dolor est error nulla. Velit voluptatum aliquam sed distinctio suscipit aut est. Voluptates blanditiis fugit non laboriosam. Qui quo voluptatum veritatis ut. Consequuntur id dolore ex id eos molestiae suscipit.",
                            ImageURL = "https://picsum.photos/640/480/?image=326",
                            StartTime = new DateOnly(2023, 10, 16),
                            Title = "Fantastic Soft Keyboard"
                        },
                        new
                        {
                            Id = 6,
                            AllocatedBudget = 1094.26,
                            BrandId = 8,
                            DateTime = new DateOnly(2025, 8, 12),
                            Description = "Voluptatum illum velit et voluptas sint ipsam. Doloribus quod vel sunt est aspernatur laboriosam. Non placeat qui. Nesciunt animi veniam et consequatur. Dolor facere dignissimos quia nihil esse.",
                            ImageURL = "https://picsum.photos/640/480/?image=259",
                            StartTime = new DateOnly(2024, 8, 5),
                            Title = "Unbranded Wooden Bacon"
                        },
                        new
                        {
                            Id = 7,
                            AllocatedBudget = 2783.3499999999999,
                            BrandId = 10,
                            DateTime = new DateOnly(2025, 6, 13),
                            Description = "Itaque at harum alias. Eos et similique. Voluptatum tenetur magni autem aut error reiciendis.",
                            ImageURL = "https://picsum.photos/640/480/?image=706",
                            StartTime = new DateOnly(2024, 3, 20),
                            Title = "Small Metal Computer"
                        },
                        new
                        {
                            Id = 8,
                            AllocatedBudget = 4963.8800000000001,
                            BrandId = 10,
                            DateTime = new DateOnly(2025, 4, 10),
                            Description = "Eos tempore sint deleniti. Sed eum qui. Nulla quis veniam aperiam sit velit animi cum voluptates.",
                            ImageURL = "https://picsum.photos/640/480/?image=432",
                            StartTime = new DateOnly(2024, 7, 14),
                            Title = "Licensed Frozen Towels"
                        },
                        new
                        {
                            Id = 9,
                            AllocatedBudget = 4027.8200000000002,
                            BrandId = 10,
                            DateTime = new DateOnly(2025, 3, 30),
                            Description = "Porro quia excepturi. Adipisci eius deserunt aut ipsam aperiam. Eveniet aut qui fugiat dolorem.",
                            ImageURL = "https://picsum.photos/640/480/?image=1008",
                            StartTime = new DateOnly(2024, 2, 19),
                            Title = "Generic Plastic Table"
                        },
                        new
                        {
                            Id = 10,
                            AllocatedBudget = 9726.3700000000008,
                            BrandId = 2,
                            DateTime = new DateOnly(2025, 5, 31),
                            Description = "Perferendis omnis ut laboriosam dolor assumenda corporis rem expedita dolores. Saepe deserunt sed vero nemo. Sint eveniet eaque excepturi ab ea quae enim eos iusto.",
                            ImageURL = "https://picsum.photos/640/480/?image=859",
                            StartTime = new DateOnly(2024, 9, 13),
                            Title = "Incredible Rubber Mouse"
                        });
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CampaignId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfluencerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("SignedDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("InfluencerId");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampaignId = 10,
                            InfluencerId = 11,
                            SignedDate = new DateOnly(2024, 1, 18)
                        },
                        new
                        {
                            Id = 2,
                            CampaignId = 8,
                            InfluencerId = 19,
                            SignedDate = new DateOnly(2024, 3, 23)
                        },
                        new
                        {
                            Id = 3,
                            CampaignId = 10,
                            InfluencerId = 16,
                            SignedDate = new DateOnly(2023, 9, 19)
                        },
                        new
                        {
                            Id = 4,
                            CampaignId = 5,
                            InfluencerId = 14,
                            SignedDate = new DateOnly(2024, 3, 13)
                        },
                        new
                        {
                            Id = 5,
                            CampaignId = 10,
                            InfluencerId = 18,
                            SignedDate = new DateOnly(2023, 10, 23)
                        },
                        new
                        {
                            Id = 6,
                            CampaignId = 4,
                            InfluencerId = 11,
                            SignedDate = new DateOnly(2023, 12, 17)
                        },
                        new
                        {
                            Id = 7,
                            CampaignId = 3,
                            InfluencerId = 18,
                            SignedDate = new DateOnly(2023, 9, 18)
                        },
                        new
                        {
                            Id = 8,
                            CampaignId = 5,
                            InfluencerId = 18,
                            SignedDate = new DateOnly(2024, 8, 13)
                        },
                        new
                        {
                            Id = 9,
                            CampaignId = 4,
                            InfluencerId = 11,
                            SignedDate = new DateOnly(2023, 10, 30)
                        },
                        new
                        {
                            Id = 10,
                            CampaignId = 4,
                            InfluencerId = 16,
                            SignedDate = new DateOnly(2024, 6, 27)
                        });
                });

            modelBuilder.Entity("iTrendz.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domain")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Brand", b =>
                {
                    b.HasBaseType("iTrendz.Domain.Models.User");

                    b.HasDiscriminator().HasValue("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "81b8d14e-743f-4d66-8524-bc0fd1a1cc5f",
                            Description = "Animi accusantium excepturi molestias.",
                            Domain = "Lifestyle",
                            Email = "Jimmy.Cruickshank70@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/645.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "JIMMY.CRUICKSHANK70@HOTMAIL.COM",
                            NormalizedUserName = "ELMORE.HYATT5",
                            PasswordHash = "xDuRkzbnlY",
                            PhoneNumber = "(526) 795-4991 x033",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "ghzjhdihaafnogjmxbxxqokovdbikcvv",
                            RefreshTokenExpiry = new DateTime(2024, 10, 18, 19, 36, 18, 880, DateTimeKind.Local).AddTicks(5049),
                            TwoFactorEnabled = false,
                            UserName = "Elmore.Hyatt5",
                            WebsiteUrl = "https://otilia.biz"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5786ee54-c51f-434d-8366-7406a678ab15",
                            Description = "Molestias qui veniam excepturi voluptatum eos ut officia.",
                            Domain = "Entertainment",
                            Email = "Felipe60@yahoo.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1054.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "FELIPE60@YAHOO.COM",
                            NormalizedUserName = "MELVIN38",
                            PasswordHash = "K7MSXs00mN",
                            PhoneNumber = "818.208.0108 x641",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "dztbzzusczrqamoofjlftahjnxphyrkb",
                            RefreshTokenExpiry = new DateTime(2024, 11, 25, 23, 45, 25, 80, DateTimeKind.Local).AddTicks(9365),
                            TwoFactorEnabled = false,
                            UserName = "Melvin38",
                            WebsiteUrl = "http://ryan.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02790817-d579-4c51-835f-585fadb62aa2",
                            Description = "In eveniet occaecati consequatur distinctio.",
                            Domain = "Fashion",
                            Email = "Arvilla_Veum42@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1217.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARVILLA_VEUM42@GMAIL.COM",
                            NormalizedUserName = "MAGDALEN_GERHOLD",
                            PasswordHash = "6WjZgG4zWU",
                            PhoneNumber = "1-298-248-8143 x3806",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "qhmlmojkjaxprobhbmluucghroimetzq",
                            RefreshTokenExpiry = new DateTime(2024, 10, 6, 19, 56, 4, 64, DateTimeKind.Local).AddTicks(5799),
                            TwoFactorEnabled = false,
                            UserName = "Magdalen_Gerhold",
                            WebsiteUrl = "https://dante.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a50c72da-73fe-4e2b-9252-78252a0bd6ca",
                            Description = "Laboriosam sed enim officia eos minima qui.",
                            Domain = "Lifestyle",
                            Email = "Johan.Olson81@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/369.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHAN.OLSON81@HOTMAIL.COM",
                            NormalizedUserName = "EUGENE.CHAMPLIN83",
                            PasswordHash = "skwnGnftbj",
                            PhoneNumber = "1-844-549-4538",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "fsucokbfhyfphmljdxfhogdkubiuiwgq",
                            RefreshTokenExpiry = new DateTime(2025, 5, 27, 16, 50, 1, 633, DateTimeKind.Local).AddTicks(9403),
                            TwoFactorEnabled = false,
                            UserName = "Eugene.Champlin83",
                            WebsiteUrl = "https://bridgette.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9af944f3-f681-4967-b9fe-adfc815aaaba",
                            Description = "Rerum esse debitis accusamus beatae quas.",
                            Domain = "Health",
                            Email = "Michaela_Kunze78@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/435.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "MICHAELA_KUNZE78@HOTMAIL.COM",
                            NormalizedUserName = "MAYBELL22",
                            PasswordHash = "Daac7NnOmM",
                            PhoneNumber = "(290) 523-7741 x13969",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "qwktdslbslqnevhtgmzcsfseyfncddsv",
                            RefreshTokenExpiry = new DateTime(2024, 10, 25, 5, 5, 29, 708, DateTimeKind.Local).AddTicks(6943),
                            TwoFactorEnabled = false,
                            UserName = "Maybell22",
                            WebsiteUrl = "http://marvin.net"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0a66f2d2-81f0-416e-a267-6f7f6c1eebe2",
                            Description = "Temporibus perferendis aut asperiores.",
                            Domain = "Health",
                            Email = "Gertrude.Smitham@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1000.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "GERTRUDE.SMITHAM@GMAIL.COM",
                            NormalizedUserName = "ROEL42",
                            PasswordHash = "c0W0MB8b8X",
                            PhoneNumber = "(367) 676-3221 x51967",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "qdwyxaovpepelaouzvrdhmutmujiwalg",
                            RefreshTokenExpiry = new DateTime(2025, 5, 18, 16, 33, 14, 475, DateTimeKind.Local).AddTicks(2820),
                            TwoFactorEnabled = false,
                            UserName = "Roel42",
                            WebsiteUrl = "https://arthur.net"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d6449fd5-12f0-4c42-94eb-f00e728aa2e7",
                            Description = "Saepe dolores veniam aut animi aliquid quam.",
                            Domain = "Sports",
                            Email = "Sadie15@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/303.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "SADIE15@GMAIL.COM",
                            NormalizedUserName = "ALESSANDRA_TOY16",
                            PasswordHash = "lbZvYk0F1a",
                            PhoneNumber = "(414) 533-2706",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "dptgsepfdfdqnotuwqivgazpdhvhbhrl",
                            RefreshTokenExpiry = new DateTime(2025, 7, 23, 7, 49, 12, 287, DateTimeKind.Local).AddTicks(2349),
                            TwoFactorEnabled = false,
                            UserName = "Alessandra_Toy16",
                            WebsiteUrl = "http://vince.org"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ab76ebf8-97c3-4252-a061-f3e8b888a23e",
                            Description = "Et consequuntur aut expedita nihil expedita deleniti sapiente nisi rerum.",
                            Domain = "Lifestyle",
                            Email = "Velda_Rice@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/929.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "VELDA_RICE@GMAIL.COM",
                            NormalizedUserName = "DARION.JOHNSON",
                            PasswordHash = "Vm03_vXDXk",
                            PhoneNumber = "416.538.1013 x68919",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "ffudrpytgknuhrkrxkwwdxultlivokxq",
                            RefreshTokenExpiry = new DateTime(2024, 10, 15, 11, 1, 7, 104, DateTimeKind.Local).AddTicks(6308),
                            TwoFactorEnabled = false,
                            UserName = "Darion.Johnson",
                            WebsiteUrl = "http://peter.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c9440f4b-7a1a-4233-8bcd-cf094df95b94",
                            Description = "Sed magnam numquam ut.",
                            Domain = "Entertainment",
                            Email = "Barrett40@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/70.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "BARRETT40@GMAIL.COM",
                            NormalizedUserName = "ELTA_SCHINNER",
                            PasswordHash = "Z6HLADtQCF",
                            PhoneNumber = "425.289.7002 x62769",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "thpkcslzosgjnapqckjtzaupsvarynxm",
                            RefreshTokenExpiry = new DateTime(2024, 9, 28, 14, 54, 8, 428, DateTimeKind.Local).AddTicks(6130),
                            TwoFactorEnabled = false,
                            UserName = "Elta_Schinner",
                            WebsiteUrl = "http://corrine.name"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6852d85c-da84-44fa-bb0f-cc825cc74780",
                            Description = "Commodi exercitationem quibusdam aperiam aliquid.",
                            Domain = "Sports",
                            Email = "Eda.Upton@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1243.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDA.UPTON@GMAIL.COM",
                            NormalizedUserName = "VICTORIA70",
                            PasswordHash = "npG8KL_xIo",
                            PhoneNumber = "(406) 745-6713 x83955",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "desoomrqfvkppmgltzwdhkxbjhzkidyx",
                            RefreshTokenExpiry = new DateTime(2024, 10, 14, 5, 47, 31, 270, DateTimeKind.Local).AddTicks(4672),
                            TwoFactorEnabled = false,
                            UserName = "Victoria70",
                            WebsiteUrl = "https://yvonne.net"
                        });
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Influencer", b =>
                {
                    b.HasBaseType("iTrendz.Domain.Models.User");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Influencer");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f49e3f8e-9ef3-48e4-ab23-fcd954ba4010",
                            Description = "Reprehenderit esse consequatur facilis quia necessitatibus dignissimos.",
                            Domain = "Fashion",
                            Email = "Leopoldo96@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/356.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "LEOPOLDO96@HOTMAIL.COM",
                            NormalizedUserName = "ARLENE.MULLER",
                            PasswordHash = "VP1pV7zG51",
                            PhoneNumber = "1-722-287-8707 x308",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "jygyisfgqqxlkukluzvwbyxonzknlgkz",
                            RefreshTokenExpiry = new DateTime(2025, 6, 25, 5, 40, 9, 222, DateTimeKind.Local).AddTicks(9965),
                            TwoFactorEnabled = false,
                            UserName = "Arlene.Muller",
                            WebsiteUrl = "http://letha.info",
                            Price = 6433,
                            Rating = 5
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f16686bd-db87-4a75-b2f3-268783ff1a7e",
                            Description = "Perspiciatis dolores hic rerum id iusto veniam aperiam voluptatem.",
                            Domain = "Tech",
                            Email = "Jason91@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/348.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "JASON91@HOTMAIL.COM",
                            NormalizedUserName = "NICKLAUS.VON",
                            PasswordHash = "uZ9JKV5vSD",
                            PhoneNumber = "535.522.7064 x52074",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "vmuntkmoutiycdluinajrttrwecawvoq",
                            RefreshTokenExpiry = new DateTime(2024, 11, 22, 1, 3, 16, 57, DateTimeKind.Local).AddTicks(1134),
                            TwoFactorEnabled = false,
                            UserName = "Nicklaus.Von",
                            WebsiteUrl = "http://genesis.biz",
                            Price = 5090,
                            Rating = 2
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5f764e23-d810-4103-b2e6-f10ac969304f",
                            Description = "Ad quod voluptatum.",
                            Domain = "Lifestyle",
                            Email = "Hans_Thompson@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/139.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANS_THOMPSON@HOTMAIL.COM",
                            NormalizedUserName = "ELISSA_PFANNERSTILL66",
                            PasswordHash = "b9_afTEJP0",
                            PhoneNumber = "776.205.8228",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "svnjutqjmagflpvsmyaodswcnbqmfaqz",
                            RefreshTokenExpiry = new DateTime(2024, 10, 11, 19, 10, 18, 301, DateTimeKind.Local).AddTicks(9079),
                            TwoFactorEnabled = false,
                            UserName = "Elissa_Pfannerstill66",
                            WebsiteUrl = "https://lacy.name",
                            Price = 6155,
                            Rating = 3
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "65c3a4de-47e4-47ad-a0c6-61428eb0d72b",
                            Description = "Mollitia laboriosam consectetur officia eos ex quos nemo impedit sapiente.",
                            Domain = "Lifestyle",
                            Email = "Karen.Hirthe94@hotmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/755.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "KAREN.HIRTHE94@HOTMAIL.COM",
                            NormalizedUserName = "CLOYD.KUPHAL80",
                            PasswordHash = "RODmqgBygZ",
                            PhoneNumber = "800-981-7605",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "frxuwjpsyijhetjjrnxdpvppiycjbgtm",
                            RefreshTokenExpiry = new DateTime(2024, 10, 15, 5, 57, 52, 29, DateTimeKind.Local).AddTicks(93),
                            TwoFactorEnabled = false,
                            UserName = "Cloyd.Kuphal80",
                            WebsiteUrl = "https://robin.com",
                            Price = 4397,
                            Rating = 3
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0e2256bb-95b3-43f3-bf24-90c492eba80c",
                            Description = "Ut qui aliquam nisi.",
                            Domain = "Entertainment",
                            Email = "Kyra_Hahn53@yahoo.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/825.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "KYRA_HAHN53@YAHOO.COM",
                            NormalizedUserName = "LAZARO_DAVIS",
                            PasswordHash = "wUKSL2BQO1",
                            PhoneNumber = "1-260-304-2077",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "ohwzelownayjjlcegvoskarvuammrifr",
                            RefreshTokenExpiry = new DateTime(2025, 7, 25, 1, 2, 46, 484, DateTimeKind.Local).AddTicks(6743),
                            TwoFactorEnabled = false,
                            UserName = "Lazaro_Davis",
                            WebsiteUrl = "https://verner.biz",
                            Price = 6883,
                            Rating = 3
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "13a64e2d-2d55-4115-a585-9d6e1cc1a975",
                            Description = "Dolores nihil non corporis pariatur perferendis.",
                            Domain = "Fashion",
                            Email = "Leonie59@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/169.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "LEONIE59@GMAIL.COM",
                            NormalizedUserName = "HARMON21",
                            PasswordHash = "0oFoIcnp9m",
                            PhoneNumber = "1-881-340-2144 x769",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "midmyapkjdnymjgwvefafbnbcwzeqsqt",
                            RefreshTokenExpiry = new DateTime(2025, 4, 20, 9, 8, 16, 43, DateTimeKind.Local).AddTicks(8414),
                            TwoFactorEnabled = false,
                            UserName = "Harmon21",
                            WebsiteUrl = "https://evie.com",
                            Price = 5780,
                            Rating = 4
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02070eaa-7d2e-483e-9618-2b5dff04a031",
                            Description = "Ipsum delectus vero pariatur deleniti quia ut ducimus.",
                            Domain = "Entertainment",
                            Email = "Dayton.Cremin@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1029.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAYTON.CREMIN@GMAIL.COM",
                            NormalizedUserName = "WEBSTER88",
                            PasswordHash = "32NUV3aQNI",
                            PhoneNumber = "1-358-669-1401",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "qlbhvfzhrehiyxbqmfbrldsstopttsde",
                            RefreshTokenExpiry = new DateTime(2025, 1, 30, 18, 31, 31, 425, DateTimeKind.Local).AddTicks(7478),
                            TwoFactorEnabled = false,
                            UserName = "Webster88",
                            WebsiteUrl = "https://kaitlin.biz",
                            Price = 3490,
                            Rating = 4
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ffa9ba2f-aa1e-4228-8f6e-c0abeaf6c483",
                            Description = "Aperiam quis cum autem adipisci ut harum.",
                            Domain = "Sports",
                            Email = "Nora_Johnston@yahoo.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/791.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORA_JOHNSTON@YAHOO.COM",
                            NormalizedUserName = "BRITNEY_JOHNS",
                            PasswordHash = "FzU3xSTrky",
                            PhoneNumber = "667.407.0509 x346",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "ijnswluvezosozxrvbdatfzvvhxmywtz",
                            RefreshTokenExpiry = new DateTime(2025, 8, 16, 1, 44, 8, 524, DateTimeKind.Local).AddTicks(1780),
                            TwoFactorEnabled = false,
                            UserName = "Britney_Johns",
                            WebsiteUrl = "http://zoey.biz",
                            Price = 5347,
                            Rating = 4
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "54edc62e-ee1c-47a9-a58e-594b048e8285",
                            Description = "Rem quas impedit reprehenderit quaerat sit.",
                            Domain = "Entertainment",
                            Email = "Delbert_Wisoky76@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1111.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "DELBERT_WISOKY76@GMAIL.COM",
                            NormalizedUserName = "ABIGAYLE89",
                            PasswordHash = "lVzWw4tHaL",
                            PhoneNumber = "648-436-4141",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "qgeiitpfgecvprfbvqrnrqjvsyhnevxn",
                            RefreshTokenExpiry = new DateTime(2025, 9, 12, 13, 18, 47, 296, DateTimeKind.Local).AddTicks(1180),
                            TwoFactorEnabled = false,
                            UserName = "Abigayle89",
                            WebsiteUrl = "https://jarvis.info",
                            Price = 5095,
                            Rating = 3
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0bd83270-a023-4f57-a3a3-9f74cbdcd3bc",
                            Description = "Laudantium cupiditate omnis nisi et dolor quidem tempore.",
                            Domain = "Tech",
                            Email = "Myah41@gmail.com",
                            EmailConfirmed = false,
                            ImageUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/267.jpg",
                            LockoutEnabled = false,
                            NormalizedEmail = "MYAH41@GMAIL.COM",
                            NormalizedUserName = "ALYCE2",
                            PasswordHash = "ktIW6_j2Us",
                            PhoneNumber = "(923) 645-2694 x426",
                            PhoneNumberConfirmed = false,
                            RefreshToken = "cslkibdkzxlmderodrywvmssmofhvjok",
                            RefreshTokenExpiry = new DateTime(2025, 2, 3, 16, 54, 49, 902, DateTimeKind.Local).AddTicks(1674),
                            TwoFactorEnabled = false,
                            UserName = "Alyce2",
                            WebsiteUrl = "https://mertie.name",
                            Price = 9825,
                            Rating = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("iTrendz.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("iTrendz.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iTrendz.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("iTrendz.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Campaign", b =>
                {
                    b.HasOne("iTrendz.Domain.Models.Brand", "Brand")
                        .WithMany("Campaigns")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Contract", b =>
                {
                    b.HasOne("iTrendz.Domain.Models.Campaign", "Campaign")
                        .WithMany("Contracts")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iTrendz.Domain.Models.Influencer", "Influencer")
                        .WithMany("Contracts")
                        .HasForeignKey("InfluencerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Influencer");
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Campaign", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Brand", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("iTrendz.Domain.Models.Influencer", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
